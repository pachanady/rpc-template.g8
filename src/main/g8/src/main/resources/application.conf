service {
  db {
    pool-provider = "config-service" //"local" OR "config-service"
    pool-provider = \${?DATABASE_POOL_PROVIDER}

    pool-cache {
      ttl = 1h
      ttl = \${?DATABASE_POOL_CACHE_TTL}

      max-capacity = 10000
      max-capacity = \${?DATABASE_POOL_CACHE_MAX_CAPACITY}
    }

    thread-pool {
      name = "storedb"

      keep-alive-time-seconds = 60
      keep-alive-time-seconds = \${?THREAD_POOL_DB_KEEP_ALIVE_TIME_SECONDS}

      fixed-pool-size = 8
      fixed-pool-size = \${?THREAD_POOL_DB_FIXED_POOL_SIZE}

      work-queue-size = 1024
      work-queue-size = \${?THREAD_POOL_DB_WORK_QUEUE_SIZE}
    }

    pools {
      config-service {
        url = ""

        database = ""

        host = ""
        host = \${?DATABASE_HOST}

        port = 3306
        port = \${?DATABASE_PORT}

        user = "root"
        user = \${?DATABASE_USER}

        password = "magic"
        password = \${?DATABASE_PASSWORD}

        max-connections = 2
        max-connections = \${?DATABASE_MAX_CONNS}

        tracing = off
        tracing = \${?DATABASE_TRACING}

        data-source-properties {
          # set to "no" to avoid bugs when using multiple store dbs
          use-server-prep-stmts = no
        }
      }
    }
  }

  $module$ {
    category-limit-warn = 1000
    category-limit-warn = \${?$module;format="upper"$_LIMIT_WARN}
  }

  interface = "127.0.0.1"
  interface = \${?WEB_INTERFACE}

  port = 9000
  port = \${?WEB_PORT}

  prometheus = {
    interface = "127.0.0.1"
    interface = \${?PROMETHEUS_INTERFACE}

    port = 9100
    port = \${?PROMETHEUS_PORT}

    endpoint = "prometheus_metrics"
    endpoint = \${?PROMETHEUS_ENDPOINT}
  }
}

core.rpc = {
  server = {
    new-relic-enabled = false
  }

}
